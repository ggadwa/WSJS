When interface created
    [ ] close gl
    [ ] all the object release()

WebGL2
    [ ] vertex array objects (liquids, models, map)
           https://webgl2fundamentals.org/webgl/lessons/webgl1-to-webgl2.html
           (reason can't do for now, it forces mesh shader setup to be per VAO, and that means repeated lights, etc.)
    [ ] uniform buffers for lights & matrixes

ESNext
    [ ] make all internal list arrays as private, use count() and get()



+ map types: sparse/compact | indoor/outdoor

+ fix the binding bug
+ close() -> release()
+ playerEntity makes weapons
+ do AI types [stalk (melee), fire (get within firing distance), sniper (stay at firing distance), boss (stalk, melee, and fire)]

***** TRACK ALL initialize/release, and don't use close()


+ move glOptions to constants
+ boxes are terrible



+ main can get some imports removed (gen stuff)

+ projectiles have ammo & time to fire on them
+ weapons have two projectiles only, ammo on projectiles



--> bounce projectiles can bounce forever
--> projectile speed needs to be > entity speed
--> monster meeles

--> stuff in genMap that can go to constants
--> storage needs smaller & bigger box random

--> need junction (box with wires or circuits)

--> commonize generate in bitmaps
--> 3rd person view

--> sounds need to be same way

--> models cast light


#### need meeles for monsters
#### stairs need quads or blocks at top
#### ai types (charge, sniper, etc)
#### windows have different bar types/glass
#### only put closets in areas that have platforms to them?
#### platforms not knocking out main map mesh walls?
#### collisions against slanted walls are bad
#### weapon models
#### get rid of weapon fire hard-coding
#### liquid tint colors are hard-coded
#### draw closest map meshes first
