When interface created
    [ ] close gl
    [ ] all the object release()

WebGL2
    [ ] vertex array objects (liquids, models, map)
           https://webgl2fundamentals.org/webgl/lessons/webgl1-to-webgl2.html
           (reason can't do for now, it forces mesh shader setup to be per VAO, and that means repeated lights, etc.)
    [ ] uniform buffers for lights & matrixes

ESNext
    [ ] make all internal list arrays as private, use count() and get()



--> make some parts of the block only floor depth in height so you can go under it
--> monster legs need to be on certain spots depending on hunch

--> stuff in genMap that can go to constants
--> storage needs smaller & bigger box random

--> need junction (box with wires or circuits)

--> commonize generate in bitmaps
--> 3rd person view
--> flatten human mesh
--> sounds need to be same way

--> need particle blob (use for explosions)
--> models cast light


#### monsters still getting hit by own projectiles
#### need meeles for monsters
#### stairs need quads or blocks at top
#### ai types (charge, sniper, etc)
#### windows have different bar types/glass
#### only put closets in areas that have platforms to them?
#### platforms not knocking out main map mesh walls?
#### collisions against slanted walls are bad
#### weapon models
#### get rid of weapon fire hard-coding
#### liquid tint colors are hard-coded
#### draw closest map meshes first
