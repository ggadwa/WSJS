When interface created
    [ ] close gl
    [ ] all the object release()

WebGL2
    [ ] vertex array objects (liquids, models, map)
           https://webgl2fundamentals.org/webgl/lessons/webgl1-to-webgl2.html
           (reason can't do for now, it forces mesh shader setup to be per VAO, and that means repeated lights, etc.)
    [ ] uniform buffers for lights & matrixes

ESNext
    [ ] make all internal list arrays as private, use count() and get()



--> make wood a separate bitmap type, use for boxes, remove from other places
--> possibly split up every texture and have wallCollection/ceilingCollection/etc randomly pick one
--> cubicals -> LiftBlocks
--> need low/high/normal room lists
--> make sky a 4x2 texture, make array for mountain heights, reverse on back half, draw random lines downwards

--> need particle blob (use for explosions)
--> platform, pipe, frame, and pillar need their own texture creation


--> models cast light
--> models get hunch as part of body skeleton, not variable

#### monsters still getting hit by own projectiles
#### need meeles for monsters
#### stairs need quads or blocks at top
#### ai types (charge, sniper, etc)
#### office decorations (outside like computers)
#### lifts instead of platforms in lower levels
#### windows have different bar types
#### only put closets in areas that have platforms to them?
#### platforms not knocking out main map mesh walls?
#### item texture is pretty ugly
#### collisions against slanted walls are bad
#### weapon models
#### get rid of weapon fire hard-coding
#### liquid tint colors are hard-coded
#### draw closest map meshes first
