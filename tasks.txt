- do the json scripting

   - pulse in weapon add ammo
                                    {"type":"pulseInterface","element":"health","tick":500,"expand":5},
                                    {"type":"pulseInterface","element":"pistol_bullet","tick":500,"expand":5},
                                    {"type":"pulseInterface","element":"m16_bullet","tick":500,"expand":5},
                                    {"type":"pulseInterface","element":"grenade","tick":500,"expand":5},

   - redo all the developer stuff as a flag

   ----> current todo
          - calc needs to have a result item, put variable there (stores if #var), and always return true/false for equals
          - conditions in messages
          - need repeat time out on messages (for shooting) -> fireFrequency
          - finish pistol weapon
          - replace to other weapons
          - put other weapons back in captain chest json
          - do health

- need to do some optimizations

- networking
    - entities need boxes passed (radius/height) --> TEST
    - need map_sync message (timestamp + map movements - round robin out to first player) todo partially implemented
    - need to transmit show/hide meshes --> TEST
    - predictions
    - need open system for passing message (like firing weapons, etc)

- generator
    - nodes don't seem right in certain rooms (like boxes)
    - the random color scheme

    - lights
       - regular
       - color changing
       - chasing (4 that go on and off)

    - bitmaps
       - pipe, needs random line & random screw line

    - decorations
       - don't repeat decorations for connected rooms
       - pool decorations
       - moving blocks (half size of segmentSize, in random circular motion)
       - better uv for pillars
       - control panel decorations
       - connectors for pipes

- demo
    - implement bot skill
    - mouse wheel broken chrome/windows
    - fix swimming

- reaper
    - random node start

- kart

- js doc: [got to wsjs directory] jsdoc -c "docs_config.json"

